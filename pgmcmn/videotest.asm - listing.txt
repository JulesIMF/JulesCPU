Listing file for "videotest.asm" assembly

Program size = 394
Stack size   = 2000



--------------------------------------------------------------------------------------------------------------
real RIP    virtual RIP         mnemonics               byte code
--------------------------------------------------------------------------------------------------------------
0x00000038  (0x00000000)	getch               	4A 
0x00000039  (0x00000001)	pushl data          	39 54 01 00 00 
0x0000003E  (0x00000006)	push 2000           	31 0A D0 07 00 00 00 00 00 00 
0x00000048  (0x00000010)	push 52             	31 0A 34 00 00 00 00 00 00 00 
0x00000052  (0x0000001A)	tran                	48 
0x00000053  (0x0000001B)	mov 2000 rax        	30 0A D0 07 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x00000065  (0x0000002D)	call printf         	11 34 00 00 00 
0x0000006A  (0x00000032)	scr                 	47 
0x0000006B  (0x00000033)	hlt                 	41 
printf:
0x0000006C  (0x00000034)	pusha               	33 
0x0000006D  (0x00000035)	mov 0 rbx           	30 2A 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0000007F  (0x00000047)	mov 0 rdx           	30 6A 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
continue_printing:
0x00000091  (0x00000059)	cmp 0 p rax         	24 1A 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x000000A3  (0x0000006B)	je prn_out          	15 0D 01 00 00 
0x000000A8  (0x00000070)	cmp 10 p rax        	24 1A 0A 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x000000BA  (0x00000082)	jne not_10          	16 9E 00 00 00 
0x000000BF  (0x00000087)	call newLine        	11 0F 01 00 00 
0x000000C4  (0x0000008C)	mov -1 rbx          	30 2A FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00 
not_10:
0x000000D6  (0x0000009E)	cmp 50 rbx          	24 2A 32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x000000E8  (0x000000B0)	jne not_endline     	16 BA 00 00 00 
0x000000ED  (0x000000B5)	call newLine        	11 0F 01 00 00 
not_endline:
0x000000F2  (0x000000BA)	mul 50 rdx          	02 6A 32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x00000104  (0x000000CC)	pop rcx             	32 04 00 00 00 00 00 00 00 00 
0x0000010E  (0x000000D6)	add rcx rbx         	00 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x00000120  (0x000000E8)	pop rcx             	32 04 00 00 00 00 00 00 00 00 
0x0000012A  (0x000000F2)	mov p rax p rcx     	30 51 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x0000013C  (0x00000104)	inc rax             	07 00 
0x0000013E  (0x00000106)	inc rbx             	07 01 
0x00000140  (0x00000108)	jmp continue_printing	10 59 00 00 00 
prn_out:
0x00000145  (0x0000010D)	popa                	35 
0x00000146  (0x0000010E)	ret                 	12 
newLine:
0x00000147  (0x0000010F)	je newline_continue 	15 15 01 00 00 
0x0000014C  (0x00000114)	ret                 	12 
newline_continue:
0x0000014D  (0x00000115)	inc rdx             	07 03 
0x0000014F  (0x00000117)	mov 0 rbx           	30 2A 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0x00000161  (0x00000129)	cmp rdx 25          	24 A6 00 00 00 00 00 00 00 00 19 00 00 00 00 00 00 00 
0x00000173  (0x0000013B)	jne newline_out     	16 52 01 00 00 
0x00000178  (0x00000140)	mov 0 rdx           	30 6A 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
newline_out:
0x0000018A  (0x00000152)	ret                 	12 
data:
